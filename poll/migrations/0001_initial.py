# Generated by Django 3.1.9 on 2023-08-01 07:00

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import poll.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('trips', '0030_device_survey_enabled'),
    ]

    operations = [
        migrations.CreateModel(
            name='Legs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('trip_length', models.FloatField(null=True)),
                ('carbon_footprint', models.FloatField(null=True)),
                ('nr_passengers', models.IntegerField(null=True)),
                ('transport_mode', models.CharField(max_length=20, null=True)),
                ('original_leg', models.BooleanField(default=True, null=True)),
                ('deleted', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lottery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.TextField()),
                ('user_email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Partisipants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('partisipant_approved', models.BooleanField(default=False)),
                ('back_question_answers', models.JSONField(null=True)),
                ('feeling_question_answers', models.JSONField(null=True)),
                ('device', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='trips.device')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_day', models.DateField()),
                ('end_day', models.DateField()),
                ('days', models.IntegerField(default=3)),
                ('max_back_question', models.IntegerField(default=3)),
                ('description', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Trips',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(null=True)),
                ('original_trip', models.BooleanField(default=True, null=True)),
                ('deleted', models.BooleanField(default=False, null=True)),
                ('purpose', models.CharField(choices=[(poll.models.Trip_purpose['tyo'], 'työ'), (poll.models.Trip_purpose['opiskelu'], 'opiskelu'), (poll.models.Trip_purpose['tyoasia'], 'työasia/opiskelu'), (poll.models.Trip_purpose['vapaaaika'], 'vapaa-aika'), (poll.models.Trip_purpose['ostos'], 'ostos'), (poll.models.Trip_purpose['muu'], 'muu asiointi ja kyyditseminen'), (poll.models.Trip_purpose['tyhja'], '')], default='', max_length=20)),
                ('approved', models.BooleanField(default=False)),
                ('start_municipality', models.CharField(choices=[(poll.models.Municipality_choice['Tampere'], 'Tampere'), (poll.models.Municipality_choice['Kangasala'], 'Kangasala'), (poll.models.Municipality_choice['Lempaala'], 'Lempäälä'), (poll.models.Municipality_choice['Nokia'], 'Nokia'), (poll.models.Municipality_choice['Orivesi'], 'Orivesi'), (poll.models.Municipality_choice['Pirkkala'], 'Pirkkala'), (poll.models.Municipality_choice['Vesilahti'], 'Vesilahti'), (poll.models.Municipality_choice['Ylojarvi'], 'Ylöjärvi'), (poll.models.Municipality_choice['muu'], 'muu Suomi')], default='Tampere', max_length=20)),
                ('end_municipality', models.CharField(choices=[(poll.models.Municipality_choice['Tampere'], 'Tampere'), (poll.models.Municipality_choice['Kangasala'], 'Kangasala'), (poll.models.Municipality_choice['Lempaala'], 'Lempäälä'), (poll.models.Municipality_choice['Nokia'], 'Nokia'), (poll.models.Municipality_choice['Orivesi'], 'Orivesi'), (poll.models.Municipality_choice['Pirkkala'], 'Pirkkala'), (poll.models.Municipality_choice['Vesilahti'], 'Vesilahti'), (poll.models.Municipality_choice['Ylojarvi'], 'Ylöjärvi'), (poll.models.Municipality_choice['muu'], 'muu Suomi')], default='Tampere', max_length=20)),
                ('partisipant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='poll.partisipants')),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_data', models.JSONField(null=True)),
                ('question_type', models.CharField(choices=[(poll.models.Question_type_choice['background'], 'background'), (poll.models.Question_type_choice['feeling'], 'feeling'), (poll.models.Question_type_choice['somethingelse'], 'somethingelse')], default='background', max_length=15)),
                ('is_use', models.BooleanField(default=True)),
                ('description', models.TextField(null=True)),
                ('survey_info', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='poll.surveyinfo')),
            ],
        ),
        migrations.AddField(
            model_name='partisipants',
            name='survey_info',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='poll.surveyinfo'),
        ),
        migrations.CreateModel(
            name='LegsLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loc', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('time', models.DateTimeField()),
                ('speed', models.FloatField(null=True)),
                ('leg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='poll.legs')),
            ],
            options={
                'ordering': ('leg', 'time'),
            },
        ),
        migrations.AddField(
            model_name='legs',
            name='trip',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='poll.trips'),
        ),
        migrations.CreateModel(
            name='DayInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('approved', models.BooleanField(default=False)),
                ('partisipants', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='poll.partisipants')),
            ],
        ),
        migrations.AddConstraint(
            model_name='trips',
            constraint=models.CheckConstraint(check=models.Q(purpose__in={'muu': poll.models.Trip_purpose['muu'], 'opiskelu': poll.models.Trip_purpose['opiskelu'], 'ostos': poll.models.Trip_purpose['ostos'], 'tyhja': poll.models.Trip_purpose['tyhja'], 'tyo': poll.models.Trip_purpose['tyo'], 'tyoasia': poll.models.Trip_purpose['tyoasia'], 'vapaaaika': poll.models.Trip_purpose['vapaaaika']}), name='purpose'),
        ),
        migrations.AddConstraint(
            model_name='trips',
            constraint=models.CheckConstraint(check=models.Q(start_municipality__in={'Kangasala': poll.models.Municipality_choice['Kangasala'], 'Lempaala': poll.models.Municipality_choice['Lempaala'], 'Nokia': poll.models.Municipality_choice['Nokia'], 'Orivesi': poll.models.Municipality_choice['Orivesi'], 'Pirkkala': poll.models.Municipality_choice['Pirkkala'], 'Tampere': poll.models.Municipality_choice['Tampere'], 'Vesilahti': poll.models.Municipality_choice['Vesilahti'], 'Ylojarvi': poll.models.Municipality_choice['Ylojarvi'], 'muu': poll.models.Municipality_choice['muu']}), name='startmunicipality'),
        ),
        migrations.AddConstraint(
            model_name='trips',
            constraint=models.CheckConstraint(check=models.Q(end_municipality__in={'Kangasala': poll.models.Municipality_choice['Kangasala'], 'Lempaala': poll.models.Municipality_choice['Lempaala'], 'Nokia': poll.models.Municipality_choice['Nokia'], 'Orivesi': poll.models.Municipality_choice['Orivesi'], 'Pirkkala': poll.models.Municipality_choice['Pirkkala'], 'Tampere': poll.models.Municipality_choice['Tampere'], 'Vesilahti': poll.models.Municipality_choice['Vesilahti'], 'Ylojarvi': poll.models.Municipality_choice['Ylojarvi'], 'muu': poll.models.Municipality_choice['muu']}), name='endmunicipality'),
        ),
        migrations.AddConstraint(
            model_name='questions',
            constraint=models.CheckConstraint(check=models.Q(question_type__in={'background': poll.models.Question_type_choice['background'], 'feeling': poll.models.Question_type_choice['feeling'], 'somethingelse': poll.models.Question_type_choice['somethingelse']}), name='question_type'),
        ),
        migrations.AlterUniqueTogether(
            name='partisipants',
            unique_together={('device', 'survey_info')},
        ),
    ]
